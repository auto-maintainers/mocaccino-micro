name: Build and push to minio

on:
  push:
    branches: [ master ]
jobs:

  generate-matrix:

    name: Generate matrix for build
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Install deps
        env:
          PREVIOUS: ${{ github.event.before }}
        run: |
          curl https://get.mocaccino.org/luet/get_luet_root.sh | sudo sh
          sudo wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -O /usr/bin/jq
          sudo chmod a+x /usr/bin/jq
          sudo luet install system/container-diff system/luet-extensions
          sudo luet install utils/keybase-tools
      - name: Set matrix for build
        id: set-matrix
        run: |
          JSON="{\"include\":"

          JSONline="$(luet tree pkglist --tree amd64 -t multi-arch -o json | jq -rc '.packages')"
          JSON="$JSON$JSONline"
          JSON="$JSON}"

          # Set output
          echo "::set-output name=matrix::$( echo "$JSON" )"

  build:
    runs-on: self-hosted 
    needs: generate-matrix
    continue-on-error: true
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v2

    - run: |
        git fetch --prune --unshallow

    - uses: actions/setup-go@v2
      with:
        go-version: '^1.14.3' # The Go version to download (if necessary) and use.

    - name: Login to DockerHub Registry
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: echo ${{ secrets.DOCKERIO_PASSWORD }} | docker login -u ${{ secrets.DOCKERIO_USERNAME }} --password-stdin

    - name: Install deps
      env:
        PREVIOUS: ${{ github.event.before }}
        BUILD_ARGS: "--pull --push"
      run: |
        sudo apt-get install -y wget make
        curl https://get.mocaccino.org/luet/get_luet_root.sh | sudo sh
        #sudo luet install system/container-diff system/luet-extensions repository/mocaccino-extra
        sudo luet install system/container-diff system/luet-extensions
        sudo luet install utils/keybase-tools
    - name: Install minio and login
      env:
        MINIO_API_URL: ${{ secrets.MINIO_API_URL }}
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      run: |
        sudo wget https://dl.min.io/client/mc/release/linux-amd64/mc -O /usr/bin/mc
        sudo chmod +x /usr/bin/mc
        mc alias set minio $MINIO_API_URL $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
    - name: Get existing repository metadata
      run: |
        mkdir $PWD/build
        chmod -R 777 $PWD/build
        mc mirror  --exclude '*.gz' minio/mocaccino-micro/ $PWD/build
        ls -liah $PWD/build

    - name: Build packages ðŸ”§
      env:
        BUILD_ARGS: "--pull --push --skip-if-metadata-exists=true"
        CLEAN: "false"
        TARGET: "target"
        PACKAGES: ${{ matrix.category }}/${{ matrix.name }}
        SUDO: "sudo -E"
      run: |
        make rebuild
        ls -liah $PWD/build

    - name: Update repository ðŸš€
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: |
        mc cp --recursive $PWD/build/ minio/mocaccino-micro

  create-repo:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true
    steps:

    - uses: actions/checkout@v2

    - run: |
        git fetch --prune --unshallow

    - uses: actions/setup-go@v2
      with:
        go-version: '^1.14.3'

    - name: Install deps
      env:
        PREVIOUS: ${{ github.event.before }}
        BUILD_ARGS: "--pull --push"
      run: |
        sudo apt-get install -y wget make
        curl https://get.mocaccino.org/luet/get_luet_root.sh | sudo sh
        #sudo luet install system/container-diff system/luet-extensions repository/mocaccino-extra
        sudo luet install system/container-diff system/luet-extensions
        sudo luet install utils/keybase-tools

    - name: Install minio and login
      env:
        MINIO_API_URL: ${{ secrets.MINIO_API_URL }}
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      run: |
        sudo wget https://dl.min.io/client/mc/release/linux-amd64/mc -O /usr/bin/mc
        sudo chmod +x /usr/bin/mc
        mc alias set minio $MINIO_API_URL $MINIO_ACCESS_KEY $MINIO_SECRET_KEY

    - name: Get existing repository metadata
      run: |
        mkdir $PWD/build
        chmod -R 777 $PWD/build
        mc mirror  --exclude '*.gz' minio/mocaccino-micro/ $PWD/build
        ls -liah $PWD/build

    #- name: Setup tmate session
    #  uses: mxschmitt/action-tmate@v2
    - name: Create repo ðŸ”§
      env:
        SUDO: "sudo -E"
      run: |
        make create-repo
        ls -liah $PWD/build

    - name: Update repository ðŸš€
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: |
        mc cp --recursive $PWD/build/ minio/mocaccino-micro
